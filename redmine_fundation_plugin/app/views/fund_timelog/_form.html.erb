<%= error_messages_for 'time_entry' %>
<%= back_url_hidden_field_tag %>

<div class="box tabular">
  <% if @time_entry.new_record? && params[:project_id] %>
    <%= hidden_field_tag :project_id, params[:project_id] %>
  <% elsif @time_entry.new_record? && params[:issue_id] %>
    <%= hidden_field_tag :issue_id, params[:issue_id] %>
  <% else %>
    <p><%= f.select :project_id, project_tree_options_for_select(Project.allowed_to(:log_time).to_a, :selected => @time_entry.project, :include_blank => true), :required => true %></p>
  <% end %>

  <p>
    <%= f.text_field :issue_id, :size => 6, :required => Setting.timelog_required_fields.include?('issue_id') %>
    <span id="time_entry_issue">
      <%=  link_to_issue(@time_entry.issue) if @time_entry.issue.try(:visible?) %>
    </span>
  </p>
  <p><%= f.date_field :spent_on, :size => 10, :required => true %><%= calendar_for('time_entry_spent_on') %></p>
  <p><%= f.hours_field :hours, :size => 6, :required => true, :onchange => "onFundWorkChanged();" %></p>
  <p><%= f.text_field :comments, :size => 100, :maxlength => 1024, :required => Setting.timelog_required_fields.include?('comments') %></p>
  <p><%= f.select :activity_id, activity_collection_for_select_options(@time_entry), :required => true %></p>
  <% @time_entry.custom_field_values.each do |value| %>
    <p><%= custom_field_tag_with_label :time_entry, value %></p>
  <% end %>
  <%= call_hook(:view_timelog_edit_form_bottom, { :time_entry => @time_entry, :form => f }) %>

  <!-- Partner Fundation Form -->
  <% if @is_partner %>
    <input id='fund_role_configs' type='hidden' disabled="disabled" name='fund_role_configs' value='<%= FundRoleConfig.all.to_json %>'/>

    <hr />
    <p>
      <%= f.select :fund_work_role, FundRoleConfig.all.collect{|r| [r.name, r.name]}, {:include_blank => true, :required => false}, {:onchange => "onFundRoleChanged();" }
      %>
    </p>
    <p>
      <%= f.text_field :fund_work_role_monthly_salary, :size => 8, :readonly => true, :required => false %>
    </p>
    <p>工作时薪=月薪/22/8*工作小时</p>
    <p>
      <%= f.hours_field :fund_work, :size => 8, :required => false, :readonly => true %>
      <span>
        <%= l(:field_work_factor) %>:<%= @time_entry.fund_work_factor %>
      <span>
    </p>
    <p>
      <%= f.text_field :fund_money, :size => 8, :required => false, :onchange => "onFundChanged();" %>
      <span>
        <%= l(:field_money_factor) %>:<%= @time_entry.fund_money_factor %>
      </span>
    </p>
    <p>
      <%= f.text_field :fund_resource, :size => 8, :required => false, :onchange => "onFundChanged();" %>
      <span>
        <%= l(:field_resource_factor) %>:<%= @time_entry.fund_resource_factor %>
      </span>
    </p>
    <div style='display:none;'>
      <%= f.text_field :fund_work_factor %>
      <%= f.text_field :fund_money_factor %>
      <%= f.text_field :fund_resource_factor %>
    </div>

    <hr />
    <p>
      <%= f.hours_field :fund_total, :size => 8, :required => false, :readonly => true %>
      <span>
        <%= l(:field_fund_money) %>*<%= l(:field_money_factor) %>+<%= l(:field_fund_resource) %>*<%= l(:field_resource_factor) %>+<%= l(:field_fund_work) %>*<%= l(:field_work_factor) %>
      <span>
    </p>

  <% end %>

</div>

<%= javascript_tag do %>
  function onFundWorkChanged(){
    var salary = parseInt($('#time_entry_fund_work_role_monthly_salary').val()) || 0;
    var hours = parseFloat($('#time_entry_hours').val()) || 0;
    $('#time_entry_fund_work').val(salary/22/8*hours);
    onFundChanged();
  }

  function onFundChanged(){
    var work_factor = parseFloat($('#time_entry_fund_work_factor').val());
    var money_factor = parseFloat($('#time_entry_fund_money_factor').val());
    var resource_factor = parseFloat($('#time_entry_fund_resource_factor').val());

    var money = parseInt($('#time_entry_fund_money').val()) || 0;
    var resource = parseInt($('#time_entry_fund_resource').val()) || 0;
    var work = parseInt($('#time_entry_fund_work').val()) || 0;
    $('#time_entry_fund_total').val(money*money_factor+resource*resource_factor+work*work_factor);
  }

  function onFundRoleChanged(){
    var role = $('#time_entry_fund_work_role').val();
    var fund_role_configs = JSON.parse($('#fund_role_configs').val());
    var salary = '';
    for(i=0;i<fund_role_configs.length;i++){
      if(fund_role_configs[i].name==role){
        salary = fund_role_configs[i].monthly_salary;
        break;
      }
    }
    $('#time_entry_fund_work_role_monthly_salary').val(salary);
    onFundWorkChanged();
  }

  $(document).ready(function(){
    $('#time_entry_project_id').change(function(){
      $('#time_entry_issue_id').val('');
    });
    $('#time_entry_project_id, #time_entry_issue_id').change(function(){
      $.ajax({
        url: '<%= escape_javascript(@time_entry.new_record? ? new_time_entry_path(:format => 'js') : edit_time_entry_path(:format => 'js')) %>',
        type: 'post',
        data: $(this).closest('form').serialize()
      });
    });
  });

  observeAutocompleteField('time_entry_issue_id',
    function(request, callback) {
      var url = '<%= j auto_complete_issues_path %>';
      var data = {
        term: request.term
      };
      var project_id;
      <% if @time_entry.new_record? && @project %>
      project_id = '<%= @project.id %>';
      <% else %>
      project_id = $('#time_entry_project_id').val();
      <% end %>
      if(project_id){
        data['project_id'] = project_id;
      } else {
        data['scope'] = 'all';
      }

      $.get(url, data, null, 'json')
        .done(function(data){
          callback(data);
        })
        .fail(function(jqXHR, status, error){
          callback([]);
        });
    },
    {
      select: function(event, ui) {
        $('#time_entry_issue').text('');
        $('#time_entry_issue_id').val(ui.item.value).change();
      }
    }
  );
<% end %>
